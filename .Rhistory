seed(1)
set.seed(45)
rnorm(20)
rnorm(20)
set.seed(45)
rnorm(20)
rnorm(50, 25, 2)
rnorm(50, 25, 1000)
pnorm(10, 100)
pnorm(10, 1)
pnorm(4, 1)
pnorm(4, 34)
rpois(45)
rpois(54, 3)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- Q.5+2*x+e
summary(y)
x
e
y <- Q.5
e
library(stats)
y <- Q.5
y <- x+e
plot(y)
y <- 0.5 + 2 * x + e
plot(y)
plot(x,y)
x <- rbinom(100, 1, 0.5)
x
x <- rbinom(100, 2, 1)
x
x <- rbinom(100, 2, 2)
system.time(readLines("http://www.cnn.com"))
system.time(readLines("http://www.cnn.com"))
hilbert <- function(n) {}
hilbert <- function(n) { i<-1:n; 1/outer(i - 1, i, "+") }
str(hilbert)
x <- hilbert(1000)
x
system.time(svd(x))
system.time(svd(x))
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
seed.set(2)
set.seed(2)
rpois(5,2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
Rprof(fit)
swirl()
library(swirl)
swirl()
x
x[1:10]
x
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar","norf")
identical(c(vect, vect2))
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- (1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <c(4,5)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:30, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
identical (my_matrix, my_matrix2)
patients <- c("Bill","Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(cnames, my_data)
?colnames
colnames(my_data) <- cnames
my_data
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(cls_list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
glas_colors <- flags[, 1:17]
glas_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, unique, character(1))
ok()
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, n=10)
tail(plants, n=15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips = sample(0:1, 100, prob=c(.3, .7) )
flips = sample(0:1, 100, prob=c(.3, .7))
flips = sample(0:1, 100, prob=c(.3, .7), replace=TRUE)
flips = sample(c(0,1), 100, replace=TRUE, prob=c(.3, .7))
flips = sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob(c(0.3, 0.7)))
flips <- sample(c(0,1), 100, replace=TRUE, prob=(c(0.3, 0.7)))
flips <- sample(c(0,1), 100, replace=TRUE, prob=(c(0.3, 0.7))
)
flips <- sample(c(0,1), 100, replace=TRUE, prob = (c(0.3, 0.7)))
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
flips(sum(flips=1))
flips(sum(flips==1))
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
rbinom(1, size=100, prob=0.7)
rbinom(1, size=100, prob=0.7)
rbinom(100, 1, 0.7)
flips2 <- rbinom(1, 100, 0.7)
flips2 <- rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(n=100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10, 100, 25)
pnorm(10)
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colmeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x="speed", y="dist")
plot(x=speed, y=dist)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot()
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist, xlab = "Speed")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab= "Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab= "Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab= "Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab= "Stopping Distance", main="My Plot")
plot(cars, main="My Plot")
plot(cars, subTitle="My Plot Subtitle")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10,15))
plot(cars, pch=2
)
load(mtcars)
mtcars
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl)
boxplot(mtcars, formal=mpg~cyl)
boxplot(formula=mpg~cyl, data=mtcars)
hist(data=mtcars$mpg)
hist(mtcars$mpg)
swirl()
swirl()
install_from_swirl(Getting_and_Cleaning_Data)
install_from_swirl("Getting_and_Cleaning_Data")
swirl()
getwd()
ls()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydef)
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
print(cran)
print cran
cran
select(cran, -time)
select(cran, -5:20)
select(cran, X11())
select(cran)
select -5:20
select (-5:20)
select (cran, -5:20)
select(cran, 1:size(X))
cran
info()
skip()
-c(5:20)
-(5:20)
select (cran, -(5:20))
select (cran, -(X:size))
filter(cran, package="swirl")
filter(cran, package=="swirl")
filter(cran, r_version -- "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country=="IN", version>="3.0.2")
filter(cran, country=="IN", version<="3.0.2")
filter(cran, r_version<="3.0.2", country == "IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(3,5,NA,10)
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- arrange(cran, size:ip_id)
cran2 <- arrange(cran, (size:ip_id))
cran2 <- select(cran, size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran4 <- select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by()
?group_by
head(cran)
by_package <- select(cran, package)
by_package group_by(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
swift()
library(swift)
swift()
library(swift)
setwd("~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02")
z<-plot6()
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
z<-plot6()
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
z<-plot6()
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
z<-plot6()
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
source('~/Desktop/Coursera/DataScience/DS - Exploratory Data Analysis - Ass02/plot6.R')
plot6()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cname, "|", argument=TRUE)
strsplit(cname, "|", TRUE)
strsplit(cnames, "|", TRUE)
strsplit(cnames, "|", fixed = TRUE)
strsplit(cnames, "|", fixed = TRUE)
skip()
cname
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<pm1$Sample.Value
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative<-x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
setwd("~/Desktop/Coursera/DataScience/President")
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
quit
info()
bye()
presidents()
presidents()
z<-presidents()
z
z$Candidate
z$Celebrity.Cameos
z<-presidents()
View(z)
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
ggplot(z, aes(x=X, y=Trump))
ggplot(z, aes(x=X)
)
ggplot(z, X)
ggplot(data=z)
ggplot(data=z, X, Trump)
z<-presidents()
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
View(z)
ggplot(data=z, X, Trump)
ggplot(data=z, z$X, Trump)
ggplot(data=z, z$X, z$Trump)
ggplot(data=z, aes(x=X, y=Trump, fill=X)))
ggplot(data=z, aes(x=X, y=Trump, fill=X))
View(z)
ggplot(data=z, aes(x=X))
ggplot(data=z, aes(x=Y))
z$X
z$Trump
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z
trump<-z$Trump
trump
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
View(z)
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
barplot(z, col="Red")
barplot(z$X, col="Red")
z<-presidents()
barplot(z)
source('~/Desktop/Coursera/DataScience/President/president.R')
barplot(height=z$Celebrity.Cameos, z$Candidate)
View(z)
barplot(height=z$Celebrity.Cameos, z$Candidate)
barplot(z$Candidate)
ggplot(z, aes(x=factor(Candidate), y=Emissions))
ggplot(z, aes(x=factor(Candidate), y=Candidate))
ggplot(z, aes(x=Candidate, y=Candidate))
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
View(z)
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
z<-presidents()
View(z)
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
y <- presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
y <- presidents()
View(y)
ggplot(z, Candidate)
ggplot(z, z$Candidate)
qplot(z)
qplot(z, z$Candidate)
qplot(z$Celebrity.Cameos, z$Candidate)
qplot(z$Candidate, z$Celebrity.Cameos)
View(z)
qplot(y$Candidate, z$Celebrity.Cameos)
qplot(Candidate, Celebrity.Cameos, data=y)
ggplot(y, aes(Candidate))
ggplot(y, aes(x=Candidate))
ggplot(y, aes(x=Candidate, y=Candidate))
ggplot(y, aes(x=Candidate, y=Celebrity.Cameos))
qplot(Candidate, Celebrity.Cameos, data=y)
qplot(Candidate, Celebrity.Cameos, data=y, facets=Candidate)
qplot(Candidate, Celebrity.Cameos, data=y, facets=y$Candidate)
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
y <- presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
y <- presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
source('~/Desktop/Coursera/DataScience/President/president.R')
y <- presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
y <- presidents()
source('~/Desktop/Coursera/DataScience/President/president.R')
